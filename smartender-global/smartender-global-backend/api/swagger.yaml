---
swagger: "2.0"
info:
  description: "Description of the global smartender API"
  version: "1.0.1"
  title: "smartender-global-server"
host: "vahlkamp.selfhost.eu:10000"
basePath: "/smartender/api"
tags:
- name: "data"
  description: "get-endpoints to retriev informations"
- name: "editing"
  description: "endpoints for creating, modifing and deleting data"
- name: "machine-operation"
  description: "endpoints that will controll behaviour of the machine"
- name: "administration"
  description: "endpoints to control administrativ data (machine association essions,\
    \ etc.)"
- name: "authentication"
  description: "..."
schemes:
- "https"
- "http"
security:
- password: []
paths:
  /login:
    post:
      tags:
      - "authentication"
      operationId: "loginPOST"
      consumes:
      - "multipart/form-data"
      - "application/x-www-form-urlencoded"
      parameters:
      - name: "login"
        in: "formData"
        description: "login and password data of the user"
        required: true
        type: "string"
      - name: "password"
        in: "formData"
        description: "password"
        required: true
        type: "string"
      responses:
        200:
          description: "user logged in"
        401:
          description: "Required authorization was missing"
          schema:
            $ref: "#/definitions/inline_response_401"
      security: []
      x-swagger-router-controller: "Authentication"
  /logout:
    post:
      tags:
      - "authentication"
      description: "logs to user out"
      operationId: "logoutPOST"
      parameters: []
      responses:
        200:
          description: "OK"
        403:
          description: "user was not logged in"
      x-swagger-router-controller: "Authentication"
  /drinks:
    get:
      tags:
      - "data"
      description: "gets drinks limited by paging"
      operationId: "drinksGET"
      parameters:
      - name: "offset"
        in: "query"
        description: "page-number, starting at 0"
        required: false
        type: "integer"
      - name: "limit"
        in: "query"
        description: "Amount of items retrieve\ndefault 20, \nmin 1,\nmax 50\n"
        required: false
        type: "integer"
      responses:
        200:
          description: "successfully retrieved page of drinks"
          schema:
            $ref: "#/definitions/DrinkPage"
        default:
          description: "Invalid request"
          schema:
            $ref: "#/definitions/inline_response_default"
      security: []
      x-swagger-router-controller: "Data"
  /drinks/{id}:
    get:
      tags:
      - "data"
      description: "returns the drink for the specified id"
      operationId: "drinksIdGET"
      parameters:
      - name: "id"
        in: "path"
        description: "an id of a drink"
        required: true
        type: "integer"
      responses:
        200:
          description: "successfully retrieved the drink"
          schema:
            $ref: "#/definitions/Drink"
        default:
          description: "Invalid request"
          schema:
            $ref: "#/definitions/inline_response_default"
      security: []
      x-swagger-router-controller: "Data"
  /drinks/new:
    put:
      tags:
      - "editing"
      description: "creates a new drink"
      operationId: "drinksNewPUT"
      parameters:
      - in: "body"
        name: "drink"
        description: "drink to be created"
        required: true
        schema:
          $ref: "#/definitions/Drink"
      responses:
        201:
          description: "drink successfully created"
        401:
          description: "Required authorization was missing"
          schema:
            $ref: "#/definitions/inline_response_401"
        default:
          description: "Invalid request"
          schema:
            $ref: "#/definitions/inline_response_default"
      security:
      - password: []
      x-swagger-router-controller: "Editing"
  /drinks/update:
    put:
      tags:
      - "editing"
      description: "updates an existing drink"
      operationId: "drinksUpdatePUT"
      parameters:
      - in: "body"
        name: "drink"
        description: "updated drink with old id"
        required: true
        schema:
          $ref: "#/definitions/Drink"
      responses:
        201:
          description: "drink successfully updated"
        401:
          description: "Required authorization was missing"
          schema:
            $ref: "#/definitions/inline_response_401"
        403:
          description: "the loggen-in user did not have the required permissions for\
            \ the operation"
          schema:
            $ref: "#/definitions/inline_response_default"
        default:
          description: "Invalid request"
          schema:
            $ref: "#/definitions/inline_response_default"
      security:
      - password: []
      x-swagger-router-controller: "Editing"
  /drinks/delete/{id}:
    delete:
      tags:
      - "editing"
      description: "deletes an existing drink"
      operationId: "drinksDeleteIdDELETE"
      parameters:
      - name: "id"
        in: "path"
        description: "id of drink to be deleted"
        required: true
        type: "integer"
      responses:
        202:
          description: "drink successfully deleted"
        401:
          description: "Required authorization was missing"
          schema:
            $ref: "#/definitions/inline_response_401"
        403:
          description: "the loggen-in user did not have the required permissions for\
            \ the operation"
          schema:
            $ref: "#/definitions/inline_response_default"
        default:
          description: "Invalid request"
          schema:
            $ref: "#/definitions/inline_response_default"
      security:
      - password: []
      x-swagger-router-controller: "Editing"
  /ingredient:
    get:
      tags:
      - "data"
      description: "gets ingredient limited by paging"
      operationId: "ingredientGET"
      parameters:
      - name: "offset"
        in: "query"
        description: "page-number, starting at 0"
        required: false
        type: "integer"
      - name: "limit"
        in: "query"
        description: "Amount of items retrieve\ndefault 20, \nmin 1,\nmax 50\n"
        required: false
        type: "integer"
      responses:
        200:
          description: "successfully retrieved page of ingredients"
          schema:
            $ref: "#/definitions/IngredientPage"
        default:
          description: "Invalid request"
          schema:
            $ref: "#/definitions/inline_response_default"
      security: []
      x-swagger-router-controller: "Data"
  /ingredient/{id}:
    get:
      tags:
      - "data"
      description: "returns the ingredient for the specified id"
      operationId: "ingredientIdGET"
      parameters:
      - name: "id"
        in: "path"
        description: "an id of an ingredient"
        required: true
        type: "integer"
      responses:
        200:
          description: "successfully retrieved the ingredient"
          schema:
            $ref: "#/definitions/Ingredient"
        default:
          description: "Invalid request"
          schema:
            $ref: "#/definitions/inline_response_default"
      security: []
      x-swagger-router-controller: "Data"
  /ingredient/new:
    put:
      tags:
      - "editing"
      description: "creates a new ingredient"
      operationId: "ingredientNewPUT"
      parameters:
      - in: "body"
        name: "ingredient"
        description: "ingredient to be creates"
        required: true
        schema:
          $ref: "#/definitions/Ingredient"
      responses:
        201:
          description: "ingredient successfully created"
        401:
          description: "Required authorization was missing"
          schema:
            $ref: "#/definitions/inline_response_401"
        default:
          description: "Invalid request"
          schema:
            $ref: "#/definitions/inline_response_default"
      security:
      - password: []
      x-swagger-router-controller: "Editing"
  /ingredient/update:
    put:
      tags:
      - "editing"
      description: "updates an exting ingredient"
      operationId: "ingredientUpdatePUT"
      parameters:
      - in: "body"
        name: "ingredient"
        description: "updated ingredient with old id"
        required: true
        schema:
          $ref: "#/definitions/Ingredient"
      responses:
        201:
          description: "ingredient successfully updated"
        401:
          description: "Required authorization was missing"
          schema:
            $ref: "#/definitions/inline_response_401"
        403:
          description: "the loggen-in user did not have the required permissions for\
            \ the operation"
          schema:
            $ref: "#/definitions/inline_response_default"
        default:
          description: "Invalid request"
          schema:
            $ref: "#/definitions/inline_response_default"
      security:
      - password: []
      x-swagger-router-controller: "Editing"
  /order:
    post:
      tags:
      - "machine-operation"
      operationId: "orderPOST"
      parameters:
      - in: "body"
        name: "order"
        description: "a order"
        required: true
        schema:
          $ref: "#/definitions/Order"
      responses:
        202:
          description: "order was successfully redirected to the specified machine"
        401:
          description: "Required authorization was missing"
          schema:
            $ref: "#/definitions/inline_response_401"
        410:
          description: "there are not enough resources to create that drink"
        default:
          description: "Invalid request"
          schema:
            $ref: "#/definitions/inline_response_default"
      security:
      - password: []
      x-swagger-router-controller: "MachineOperation"
  /sessions/current:
    get:
      tags:
      - "administration"
      operationId: "sessionsCurrentGET"
      parameters: []
      responses:
        200:
          description: "the active session"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Session"
        default:
          description: "Invalid request"
          schema:
            $ref: "#/definitions/inline_response_default"
      security:
      - password: []
      x-swagger-router-controller: "Administration"
  /sessions/join:
    post:
      tags:
      - "administration"
      description: "join a session. A pending invite is required for that"
      operationId: "sessionsJoinPOST"
      parameters:
      - name: "guid"
        in: "query"
        description: "global unique identifier of the session to join"
        required: true
        type: "string"
      responses:
        202:
          description: "current user joined the session"
        401:
          description: "Required authorization was missing"
          schema:
            $ref: "#/definitions/inline_response_401"
        403:
          description: "the loggen-in user did not have the required permissions for\
            \ the operation"
          schema:
            $ref: "#/definitions/inline_response_default"
        default:
          description: "Invalid request"
          schema:
            $ref: "#/definitions/inline_response_default"
      security:
      - password: []
      x-swagger-router-controller: "Administration"
  /sessions/leave:
    post:
      tags:
      - "administration"
      description: "leave a session. You have to be part of the session to leave"
      operationId: "sessionsLeavePOST"
      parameters:
      - name: "guid"
        in: "query"
        description: "global unique identifier of the session to leave"
        required: true
        type: "string"
      responses:
        202:
          description: "current user left the session"
        401:
          description: "Required authorization was missing"
          schema:
            $ref: "#/definitions/inline_response_401"
        403:
          description: "the loggen-in user did not have the required permissions for\
            \ the operation"
          schema:
            $ref: "#/definitions/inline_response_default"
        default:
          description: "Invalid request"
          schema:
            $ref: "#/definitions/inline_response_default"
      security:
      - password: []
      x-swagger-router-controller: "Administration"
  /sessions/invite:
    post:
      tags:
      - "administration"
      description: "invite a user to a session"
      operationId: "sessionsInvitePOST"
      parameters:
      - name: "userid"
        in: "query"
        required: true
        type: "integer"
      - name: "sessionid"
        in: "query"
        required: true
        type: "integer"
      - name: "canEditMachine"
        in: "query"
        description: "if set to true, the user will be able to perform operations\
          \ like setting slot values or ingredients"
        required: false
        type: "boolean"
        default: false
      responses:
        202:
          description: "user was invited to the session"
        401:
          description: "Required authorization was missing"
          schema:
            $ref: "#/definitions/inline_response_401"
        403:
          description: "the loggen-in user did not have the required permissions for\
            \ the operation"
          schema:
            $ref: "#/definitions/inline_response_default"
        default:
          description: "Invalid request"
          schema:
            $ref: "#/definitions/inline_response_default"
      security:
      - password: []
      x-swagger-router-controller: "Administration"
  /sessions/kick:
    post:
      tags:
      - "administration"
      description: "kicks a user from a session"
      operationId: "sessionsKickPOST"
      parameters:
      - name: "userid"
        in: "query"
        required: true
        type: "integer"
      - name: "sessionid"
        in: "query"
        required: true
        type: "integer"
      responses:
        202:
          description: "user was kicked from the session"
        401:
          description: "Required authorization was missing"
          schema:
            $ref: "#/definitions/inline_response_401"
        403:
          description: "the loggen-in user did not have the required permissions for\
            \ the operation"
          schema:
            $ref: "#/definitions/inline_response_default"
        default:
          description: "Invalid request"
          schema:
            $ref: "#/definitions/inline_response_default"
      security:
      - password: []
      x-swagger-router-controller: "Administration"
  /sessions/create:
    post:
      tags:
      - "administration"
      description: "creates a new session for the logged-in user and the specified\
        \ machine"
      operationId: "sessionsCreatePOST"
      parameters:
      - name: "machine"
        in: "query"
        description: "id of the machine for this session"
        required: true
        type: "integer"
      responses:
        201:
          description: "created a nes session and returned session object"
          schema:
            $ref: "#/definitions/Session"
        401:
          description: "Required authorization was missing"
          schema:
            $ref: "#/definitions/inline_response_401"
        403:
          description: "the loggen-in user did not have the required permissions for\
            \ the operation"
          schema:
            $ref: "#/definitions/inline_response_default"
        default:
          description: "Invalid request"
          schema:
            $ref: "#/definitions/inline_response_default"
      security:
      - password: []
      x-swagger-router-controller: "Administration"
  /sessions/delete:
    delete:
      tags:
      - "administration"
      description: "deletes the specified session. Logged-in user must be the owner"
      operationId: "sessionsDeleteDELETE"
      parameters:
      - name: "session"
        in: "query"
        description: "guid of the session to delete"
        required: true
        type: "string"
      responses:
        201:
          description: "session successfully deleted"
        401:
          description: "Required authorization was missing"
          schema:
            $ref: "#/definitions/inline_response_401"
        403:
          description: "the loggen-in user did not have the required permissions for\
            \ the operation"
          schema:
            $ref: "#/definitions/inline_response_default"
        default:
          description: "Invalid request"
          schema:
            $ref: "#/definitions/inline_response_default"
      security:
      - password: []
      x-swagger-router-controller: "Administration"
  /sessions/pause:
    post:
      tags:
      - "administration"
      description: "deactivates a session"
      operationId: "sessionsPausePOST"
      parameters:
      - name: "sessionid"
        in: "query"
        description: "guid of the session to pause"
        required: true
        type: "string"
      responses:
        201:
          description: "session successfully deleted"
        401:
          description: "Required authorization was missing"
          schema:
            $ref: "#/definitions/inline_response_401"
        403:
          description: "the loggen-in user did not have the required permissions for\
            \ the operation"
          schema:
            $ref: "#/definitions/inline_response_default"
        default:
          description: "Invalid request"
          schema:
            $ref: "#/definitions/inline_response_default"
      security:
      - password: []
      x-swagger-router-controller: "Administration"
  /me:
    get:
      tags:
      - "data"
      operationId: "meGET"
      parameters: []
      responses:
        200:
          description: "returned the logged-in user"
          schema:
            $ref: "#/definitions/User"
        401:
          description: "Required authorization was missing"
          schema:
            $ref: "#/definitions/inline_response_401"
        default:
          description: "Invalid request"
          schema:
            $ref: "#/definitions/inline_response_default"
      security:
      - password: []
      x-swagger-router-controller: "Data"
  /user/machines:
    get:
      tags:
      - "data"
      operationId: "userMachinesGET"
      parameters: []
      responses:
        200:
          description: "returned an array of machines that belong to the logged-in\
            \ user"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Machine"
        401:
          description: "Required authorization was missing"
          schema:
            $ref: "#/definitions/inline_response_401"
        403:
          description: "the loggen-in user did not have the required permissions for\
            \ the operation"
          schema:
            $ref: "#/definitions/inline_response_default"
        default:
          description: "Invalid request"
          schema:
            $ref: "#/definitions/inline_response_default"
      security:
      - password: []
      x-swagger-router-controller: "Data"
  /machines/associate:
    post:
      tags:
      - "administration"
      operationId: "machinesAssociatePOST"
      parameters:
      - in: "body"
        name: "machinekey"
        description: "unique key associated with the machine"
        required: true
        schema:
          type: "string"
      responses:
        202:
          description: "user successfully associated with the machine"
        401:
          description: "Required authorization was missing"
          schema:
            $ref: "#/definitions/inline_response_401"
        403:
          description: "the loggen-in user did not have the required permissions for\
            \ the operation"
          schema:
            $ref: "#/definitions/inline_response_default"
        default:
          description: "Invalid request"
          schema:
            $ref: "#/definitions/inline_response_default"
      security:
      - password: []
      x-swagger-router-controller: "Administration"
    delete:
      tags:
      - "administration"
      operationId: "machinesAssociateDELETE"
      parameters:
      - in: "body"
        name: "machinekey"
        description: "unique key associated with the machine"
        required: true
        schema:
          type: "string"
      responses:
        202:
          description: "machine successfully removed from user"
        401:
          description: "Required authorization was missing"
          schema:
            $ref: "#/definitions/inline_response_401"
        403:
          description: "the loggen-in user did not have the required permissions for\
            \ the operation"
          schema:
            $ref: "#/definitions/inline_response_default"
        default:
          description: "Invalid request"
          schema:
            $ref: "#/definitions/inline_response_default"
      security:
      - password: []
      x-swagger-router-controller: "Administration"
  /machines/{machineid}/fillslot:
    post:
      tags:
      - "administration"
      operationId: "machinesMachineidFillslotPOST"
      parameters:
      - name: "machineid"
        in: "path"
        description: "the id of the machine htat this operation will be executed for"
        required: true
        type: "integer"
      - name: "ingredientid"
        in: "query"
        description: "id of the ingredient that ill be put in the slot"
        required: true
        type: "integer"
      responses:
        202:
          description: "successfully filled slot"
        401:
          description: "Required authorization was missing"
          schema:
            $ref: "#/definitions/inline_response_401"
        403:
          description: "the loggen-in user did not have the required permissions for\
            \ the operation"
          schema:
            $ref: "#/definitions/inline_response_default"
        default:
          description: "Invalid request"
          schema:
            $ref: "#/definitions/inline_response_default"
      security:
      - password: []
      x-swagger-router-controller: "Administration"
  /machines/{machineid}/clearslot:
    post:
      tags:
      - "administration"
      operationId: "machinesMachineidClearslotPOST"
      parameters:
      - name: "machineid"
        in: "path"
        description: "the id of the machine htat this operation will be executed for"
        required: true
        type: "integer"
      responses:
        202:
          description: "successfully cleared slot"
        401:
          description: "Required authorization was missing"
          schema:
            $ref: "#/definitions/inline_response_401"
        403:
          description: "the loggen-in user did not have the required permissions for\
            \ the operation"
          schema:
            $ref: "#/definitions/inline_response_default"
        default:
          description: "Invalid request"
          schema:
            $ref: "#/definitions/inline_response_default"
      security:
      - password: []
      x-swagger-router-controller: "Administration"
  /machines/{machineid}/setslot-state:
    post:
      tags:
      - "administration"
      operationId: "machinesMachineidSetslot_statePOST"
      parameters:
      - name: "machineid"
        in: "path"
        description: "the id of the machine htat this operation will be executed for"
        required: true
        type: "integer"
      - name: "state"
        in: "query"
        description: "the state the slot should be set to"
        required: true
        type: "boolean"
      responses:
        202:
          description: "successfully set slot-state"
        401:
          description: "Required authorization was missing"
          schema:
            $ref: "#/definitions/inline_response_401"
        403:
          description: "the loggen-in user did not have the required permissions for\
            \ the operation"
          schema:
            $ref: "#/definitions/inline_response_default"
        default:
          description: "Invalid request"
          schema:
            $ref: "#/definitions/inline_response_default"
      security:
      - password: []
      x-swagger-router-controller: "Administration"
  /machines/{machineid}/close-all:
    post:
      tags:
      - "administration"
      operationId: "machinesMachineidClose_allPOST"
      parameters:
      - name: "machineid"
        in: "path"
        description: "the id of the machine htat this operation will be executed for"
        required: true
        type: "integer"
      responses:
        202:
          description: "successfully closed all slots"
        401:
          description: "Required authorization was missing"
          schema:
            $ref: "#/definitions/inline_response_401"
        403:
          description: "the loggen-in user did not have the required permissions for\
            \ the operation"
          schema:
            $ref: "#/definitions/inline_response_default"
        default:
          description: "Invalid request"
          schema:
            $ref: "#/definitions/inline_response_default"
      security:
      - password: []
      x-swagger-router-controller: "Administration"
securityDefinitions:
  password:
    type: "basic"
definitions:
  User:
    type: "object"
    properties:
      id:
        type: "integer"
      alias:
        type: "string"
        description: "the users display-name"
    example:
      alias: "alias"
      id: 0
  Drink:
    type: "object"
    properties:
      id:
        type: "integer"
        description: "id of the drink"
      name:
        type: "string"
        description: "name of the drink"
      Ingredients:
        type: "array"
        items:
          $ref: "#/definitions/Ingredient"
    example:
      Ingredients:
      - name: "name"
        parts: 5
        id: 6
        alcvol: 1
      - name: "name"
        parts: 5
        id: 6
        alcvol: 1
      name: "name"
      id: 0
  Ingredient:
    type: "object"
    properties:
      id:
        type: "integer"
        description: "id of the ingredient"
      name:
        type: "string"
        description: "name of the ingredient"
      alcvol:
        type: "integer"
        description: "alcohol vol. as a percentage"
      parts:
        type: "integer"
        description: "describes, if in a drink, how many parts of that drink are this\
          \ ingredient"
    example:
      name: "name"
      parts: 5
      id: 6
      alcvol: 1
  DrinkPage:
    type: "object"
    properties:
      drinks:
        type: "array"
        description: "array with result items"
        items:
          $ref: "#/definitions/Drink"
      next:
        type: "string"
        description: "link to retrieve next page if possible"
      previous:
        type: "string"
        description: "link to retrieve previous page if possible"
    description: "a paging object that contains drinks"
    example:
      next: "next"
      previous: "previous"
      drinks:
      - Ingredients:
        - name: "name"
          parts: 5
          id: 6
          alcvol: 1
        - name: "name"
          parts: 5
          id: 6
          alcvol: 1
        name: "name"
        id: 0
      - Ingredients:
        - name: "name"
          parts: 5
          id: 6
          alcvol: 1
        - name: "name"
          parts: 5
          id: 6
          alcvol: 1
        name: "name"
        id: 0
  IngredientPage:
    type: "object"
    properties:
      ingredients:
        type: "array"
        description: "array with result items"
        items:
          $ref: "#/definitions/Ingredient"
      next:
        type: "string"
        description: "link to retrieve next page if possible"
      previous:
        type: "string"
        description: "link to retrieve previous page if possible"
    description: "a paging object that contains ingredients"
    example:
      next: "next"
      previous: "previous"
      ingredients:
      - name: "name"
        parts: 5
        id: 6
        alcvol: 1
      - name: "name"
        parts: 5
        id: 6
        alcvol: 1
  Machine:
    type: "object"
    properties:
      name:
        type: "string"
        description: "name of the machine"
      owner:
        $ref: "#/definitions/User"
      id:
        type: "integer"
        description: "unique id of this machine"
    description: "a machine"
    example:
      owner:
        alias: "alias"
        id: 0
      name: "name"
      id: 6
  Order:
    type: "object"
    properties:
      machine:
        $ref: "#/definitions/Machine"
      drink:
        $ref: "#/definitions/Drink"
    example:
      machine:
        owner:
          alias: "alias"
          id: 0
        name: "name"
        id: 6
      drink:
        Ingredients:
        - name: "name"
          parts: 5
          id: 6
          alcvol: 1
        - name: "name"
          parts: 5
          id: 6
          alcvol: 1
        name: "name"
        id: 0
  Session:
    type: "object"
    properties:
      guid:
        type: "string"
        description: "a global unique identifier for this session"
      owner:
        $ref: "#/definitions/User"
      machine:
        $ref: "#/definitions/Machine"
      active:
        type: "boolean"
        description: "true if this is the users active session"
    description: "describes a session"
    example:
      owner:
        alias: "alias"
        id: 0
      machine:
        owner:
          alias: "alias"
          id: 0
        name: "name"
        id: 6
      guid: "guid"
      active: true
  inline_response_401:
    properties:
      required_scopes:
        type: "array"
        description: "scopes that are required for this operation"
        items:
          type: "string"
  inline_response_default:
    properties:
      message:
        type: "string"
parameters:
  PageSize:
    name: "limit"
    in: "query"
    description: "Amount of items retrieve\ndefault 20, \nmin 1,\nmax 50\n"
    required: false
    type: "integer"
  PageNumber:
    name: "offset"
    in: "query"
    description: "page-number, starting at 0"
    required: false
    type: "integer"
  OrderRequest:
    in: "body"
    name: "order"
    description: "a order"
    required: true
    schema:
      $ref: "#/definitions/Order"
responses:
  400Error:
    description: "Invalid request"
    schema:
      type: "object"
      properties:
        message:
          type: "string"
  Forbidden:
    description: "the loggen-in user did not have the required permissions for the\
      \ operation"
    schema:
      type: "object"
      properties:
        message:
          type: "string"
  Unauthorized:
    description: "Required authorization was missing"
    schema:
      type: "object"
      properties:
        required_scopes:
          type: "array"
          description: "scopes that are required for this operation"
          items:
            type: "string"
